#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use XML::Simple;
use LWP::Simple;
use POSIX qw(strftime);
use Device::SerialPort;

my $parser = new XML::Simple;

my $url = 'http://api.openweathermap.org/data/2.5/find?q=Badalona&units=metric&mode=xml&cnt=2';
my $url2 ='http://api.openweathermap.org/data/2.5/forecast/daily?q=Badalona&mode=xml&units=metric&cnt=2';
my $content = get $url or die "Unable to get $url\n";

my $content2 = get $url2 or die "Unable to get $url2\n";

my $data = $parser->XMLin($content);
my $data2 = $parser->XMLin($content2);
#print Dumper($data);

# access XML data
my $humi=$data->{list}{item}{humidity}{value}; 
my $temp= $data->{list}{item}{temperature}{'max'};
my $israining=$data->{list}{item}{precipitation}{mode};
#print "Temperatura màxima: $temp, ";
#print "Humitat: $humi, ";
#print "Plou?: $israining, ";
#http://openweathermap.org/wiki/API/Weather_Condition_Codes
my $cond = $data2->{forecast}{time}[1]{symbol}{name};
my $rainbool;
if ( $cond eq 'Rain' or  $cond eq 'Thunderstorm')
{ $rainbool="yes"; } else { $rainbool="no" }; 
#print "Plourà?: $rainbool\n";
 
  my $date = strftime "%d/%m/%Y-%HH:%MM", localtime;
  print "$date ";
  print "Demà: $cond, Màx: $temp C,Humitat: $humi%, Plou: $israining, ";
  my $score = 50;
  $score += 50 if $humi < 50;
  $score -= 30 if $cond =~ /shower rain/;
  $score -= 80 if $cond =~ /Rain/;
  $score += 80 if $cond =~ /sky is clear/;
  $score += 70 if $cond =~ /few clouds/;
  $score += 60 if $cond =~ /scattered clouds/;
  $score += 50 if $cond =~ /broken clouds/;

  if($temp > 20) {
      $score += ($temp-15)*10;
  }
  print "Score: $score, ";

  $score = 100 if $score > 100;
  $score = 0   if $score < 0;

if ($score==100){
#my $var=`python /home/pi/scripts/regautomatic/hola.py`;
my $var2=`cd /home/pi/scripts/regautomatic/ && ./enviarAMBechos.sh`;
#my $var3=`perl /home/pi/scripts/regautomatic/arduino_Serial.pl`;
print("REGANT!! :)\n");
}else{
print("NO rego :(\n");
}
